 akka {
    # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs to STDOUT)
    #loggers = ["akka.event.slf4j.Slf4jLogger"]

    # Log level used by the configured loggers (see "loggers") as soon
    # as they have been started; before that, see "stdout-loglevel"
    # Options: OFF, ERROR, WARNING, INFO, DEBUG
    loglevel = "DEBUG"

    # Log level for the very basic logger activated during AkkaApplication startup
    # Options: OFF, ERROR, WARNING, INFO, DEBUG
    stdout-loglevel = "DEBUG"

    log-dead-letters-during-shutdown = false

    actor {
        debug {
            #lifecycle = off
            # enable function of LoggingReceive, which is to log any received message at DEBUG level
            #receive = off
        }

        # Define the dispatcher needed for implementing actor queue "Pause" messages.
        # When paused, any messages received by the actor are requeued for later processing.
        #dequeable-dispatcher {
        #    mailbox-type = "akka.dispatch.UnboundedDequeBasedMailbox"
        #}
    }
 }


csw {
    commandService {
        interface = localhost
        port      = 8088
        timeout   = 10 seconds
    }

    testCommandService {
        interface = localhost
        port      = 8089
        timeout   = 10 seconds
    }

    // Root of the ExtJS workspace to use for Spray route (during development: $CSW_ROOT/extjs)
    extjs {
        // Note: this value can be overridden in Build.scala (ends up as -Dcsw.ext.root in the start script).
        // If not overridden in Build.scala, it can be overridden in the application's reference.conf file.
        root = "/Users/abrighto/work/tmt/csw/extjs"
    }
}
