// Akka config file for the Config Service

akka {
  log-dead-letters = 0
  log-dead-letters-during-shutdown = off
  loglevel = "INFO"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  stdout-loglevel = OFF

  // The default is on, which means send HEAD requests as GET, which we don't want here
  http.server.transparent-head-requests = off

  actor {
    provider = "akka.remote.RemoteActorRefProvider"
  }
  remote {
    log-remote-lifecycle-events = off
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      // Set to host where config service is running
      hostname = "127.0.0.1"
      // Port 0 means port number will be automatically chosen (use location service to find)
      port = 0
    }
  }
}

// Default settings for the config service
csw.services.cs {

  // Name of this config service
  name = "Test Config Service 1"

  // The URI of the main GIT repository used by the Config Service (a bare Git repo).
  // See http://git-scm.com/book/en/v2/Git-on-the-Server-Setting-Up-the-Server.
  // Make sure to add an initial file (such as README) and commit/push once before use.
  // TODO: Add a script to create the main repo.
  main-repository = "file:///tmp/CsTestMainRepo1/"

  // Path to the local GIT repository, which will sync with the main Git repository
  local-repository = "/tmp/CsTestLocalRepo1/"

  // Number of bytes to write at one time (to config service annex server)
  chunkSize = 4096

  // Host to listen to for config service http server (can also use "0.0.0.0")
  http-interface = localhost

  // Port to listen on for config service http server (use 0 to get a random port assigned)
  http-port = 8541

  // Timeout for ask messages
  timeout = 5000 milliseconds
}
